{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?de97","webpack:///./src/js/rsvp-3.1.0.min.js","webpack:///./src/App.vue?8a59","webpack:///./src/print-barcode.js","webpack:///src/App.vue","webpack:///./src/App.vue?a37b","webpack:///./src/App.vue?180a","webpack:///./src/main.js","webpack:///./src/js/qz-tray.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","lib$rsvp$utils$$objectOrFunction","x","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_8__","lib$rsvp$utils$$isFunction","lib$rsvp$utils$$isMaybeThenable","lib$rsvp$utils$$_isArray","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_7___default","a","toString","lib$rsvp$utils$$isArray","lib$rsvp$utils$$now","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_date_now__WEBPACK_IMPORTED_MODULE_5___default","Date","getTime","lib$rsvp$utils$$F","lib$rsvp$utils$$o_create","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_object_create__WEBPACK_IMPORTED_MODULE_4___default","arguments","Error","TypeError","lib$rsvp$events$$indexOf","callbacks","callback","lib$rsvp$events$$callbacksFor","_promiseCallbacks","lib$rsvp$events$$default","mixin","this","undefined","on","eventName","allCallbacks","off","index","trigger","options","label","lib$rsvp$config$$config","instrument","lib$rsvp$config$$configure","lib$rsvp$instrument$$queue","lib$rsvp$instrument$$scheduleFlush","setTimeout","entry","payload","guid","id","childGuid","childId","error","stack","lib$rsvp$instrument$$instrument","promise","child","_guidKey","_id","detail","_result","_label","timeStamp","lib$rsvp$instrument$$default","lib$rsvp$$internal$$withOwnPromise","lib$rsvp$$internal$$noop","lib$rsvp$$internal$$PENDING","lib$rsvp$$internal$$FULFILLED","lib$rsvp$$internal$$REJECTED","lib$rsvp$$internal$$GET_THEN_ERROR","lib$rsvp$$internal$$ErrorObject","lib$rsvp$$internal$$getThen","then","lib$rsvp$$internal$$tryThen","fulfillmentHandler","rejectionHandler","e","lib$rsvp$$internal$$handleForeignThenable","thenable","async","sealed","lib$rsvp$$internal$$resolve","lib$rsvp$$internal$$fulfill","reason","lib$rsvp$$internal$$reject","lib$rsvp$$internal$$handleOwnThenable","_state","_onError","lib$rsvp$$internal$$subscribe","lib$rsvp$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$rsvp$$internal$$publishRejection","lib$rsvp$$internal$$publish","_subscribers","parent","onFulfillment","onRejection","subscribers","settled","lib$rsvp$$internal$$invokeCallback","lib$rsvp$$internal$$TRY_CATCH_ERROR","lib$rsvp$$internal$$tryCatch","succeeded","failed","hasCallback","lib$rsvp$$internal$$initializePromise","resolver","resolved","lib$rsvp$enumerator$$makeSettledResult","state","position","lib$rsvp$enumerator$$Enumerator","Constructor","input","abortOnReject","enumerator","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$rsvp$enumerator$$default","lib$rsvp$promise$all$$all","entries","Array","_eachEntry","_settledAt","_willSettleAt","resolve","_makeResult","lib$rsvp$promise$all$$default","lib$rsvp$promise$race$$race","lib$rsvp$promise$race$$default","lib$rsvp$promise$resolve$$resolve","lib$rsvp$promise$resolve$$default","lib$rsvp$promise$reject$$reject","lib$rsvp$promise$reject$$default","lib$rsvp$promise$$guidKey","lib$rsvp$promise$$counter","lib$rsvp$promise$$needsResolver","lib$rsvp$promise$$needsNew","lib$rsvp$promise$$Promise","lib$rsvp$promise$$default","lib$rsvp$all$settled$$AllSettled","_superConstructor","lib$rsvp$all$settled$$allSettled","cast","all","race","reject","after","catch","finally","lib$rsvp$all$settled$$default","lib$rsvp$all$$all","array","lib$rsvp$asap$$vertxNext","lib$rsvp$all$$default","lib$rsvp$asap$$len","lib$rsvp$asap$$asap","arg","lib$rsvp$asap$$queue","lib$rsvp$asap$$scheduleFlush","lib$rsvp$asap$$default","lib$rsvp$asap$$browserWindow","lib$rsvp$asap$$browserGlobal","lib$rsvp$asap$$BrowserMutationObserver","MutationObserver","WebKitMutationObserver","lib$rsvp$asap$$isNode","self","process","lib$rsvp$asap$$isWorker","Uint8ClampedArray","importScripts","MessageChannel","lib$rsvp$asap$$useNextTick","nextTick","version","versions","node","match","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_set_immediate__WEBPACK_IMPORTED_MODULE_0___default","lib$rsvp$asap$$flush","lib$rsvp$asap$$useVertxTimer","lib$rsvp$asap$$useMutationObserver","iterations","observer","document","createTextNode","observe","characterData","lib$rsvp$asap$$useMessageChannel","channel","port1","onmessage","port2","postMessage","lib$rsvp$asap$$useSetTimeout","lib$rsvp$asap$$attemptVertex","vertx","code","runOnLoop","runOnContext","lib$rsvp$defer$$defer","deferred","lib$rsvp$defer$$default","lib$rsvp$filter$$filter","promises","filterFn","values","filtered","results","newLength","lib$rsvp$filter$$default","lib$rsvp$promise$hash$$PromiseHash","lib$rsvp$promise$hash$$default","lib$rsvp$hash$settled$$HashSettled","lib$rsvp$hash$settled$$hashSettled","lib$rsvp$hash$settled$$default","lib$rsvp$hash$$hash","lib$rsvp$hash$$default","lib$rsvp$map$$map","mapFn","lib$rsvp$map$$default","lib$rsvp$node$$Result","lib$rsvp$node$$ERROR","lib$rsvp$node$$GET_THEN_ERROR","lib$rsvp$node$$getThen","obj","lib$rsvp$node$$tryApply","f","lib$rsvp$node$$makeObject","_","argumentNames","args","lib$rsvp$node$$arrayResult","lib$rsvp$node$$wrapThenable","onFulFillment","lib$rsvp$node$$denodeify","nodeFunc","fn","promiseInput","lib$rsvp$node$$needsPromiseInput","err","val","lib$rsvp$node$$handlePromiseInput","lib$rsvp$node$$handleValueInput","__proto__","lib$rsvp$platform$$platform","lib$rsvp$node$$default","global","lib$rsvp$platform$$default","lib$rsvp$race$$race","lib$rsvp$race$$default","lib$rsvp$reject$$reject","lib$rsvp$reject$$default","lib$rsvp$resolve$$resolve","lib$rsvp$resolve$$default","lib$rsvp$rethrow$$rethrow","lib$rsvp$rethrow$$default","cb","lib$rsvp$$async","lib$rsvp$$on","lib$rsvp$$off","lib$rsvp$$callbacks","lib$rsvp$$eventName","lib$rsvp$umd$$RSVP","Promise","allSettled","hash","hashSettled","denodeify","map","filter","rethrow","defer","EventTarget","configure","define","Appvue_type_template_id_fb85eda4_render","_vm","_h","$createElement","_c","_self","attrs","staticClass","_v","directives","rawName","expression","change","$event","$$selectedVal","target","selected","_value","printerName","multiple","_l","printer","domProps","_s","type","composing","productCode","barcode","click","print","_m","staticRenderFns","require","JsBarcode","sha256","qz","api","setSha256Type","connect","websocket","alert","printBarcode","base64","getBarcodeData","barcodeImg","split","printData","format","config","configs","console","log","canvas","createElement","ctx","getContext","marginBottom","font","textAlign","fillText","width","height","toDataURL","renderBarcodeDemo","elementId","getElementById","getAvailablePrinters","printers","find","Appvue_type_script_lang_js_","methods","renderDemo","mounted","_this","watch","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","Vue","productionTip","render","h","$mount","__webpack_exports__","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_2__","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_2___default","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_date_now__WEBPACK_IMPORTED_MODULE_3__","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_date_now__WEBPACK_IMPORTED_MODULE_3___default","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_5__","_Users_panda_WebstormProjects_cube_label_node_modules_babel_runtime_corejs2_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_5___default","isArray","_qz","VERSION","DEBUG","trace","info","warn","streams","serial","usb","hid","connection","connectConfig","host","hostIndex","usingSecure","protocol","secure","insecure","port","portIndex","keepAlive","retries","delay","setup","findConnection","address","deeper","tools","ws","established","onopen","evt","openConnection","interval","setInterval","isActive","send","clearInterval","onclose","navigator","userAgent","indexOf","onerror","openPromise","sendCert","cert","sendData","certificate","uid","callClose","pendingCalls","callError","timestamp","newUID","screen","availWidth","left","availLeft","y","availHeight","top","availTop","signature","signObj","params","hashing","stringify","hashed","security","callSign","signContent","returned","JSON","parse","close","event","portName","output","callSerial","vendorId","productId","callUsb","callHid","callCert","len","join","Math","random","pow","dataPromise","callName","signingTimestamp","msg","errorCallbacks","closedCallbacks","printing","defaultConfig","colorType","copies","density","duplex","fallbackDensity","interpolation","jobName","legacy","margins","orientation","paperThickness","printerTray","rasterize","rotation","scaleContent","size","units","altPrinting","encoding","endOfDoc","perSpool","serialCallbacks","streamEvent","usbCallbacks","hidCallbacks","certPromise","signaturePromise","toSign","RSVP","pjson","toJSON","Sha256","WebSocket","absolute","loc","href","extend","source","clone","Config","opts","setPrinter","newPrinter","getPrinter","reconfigure","newOpts","getOptions","CLOSED","location","attempt","count","tried","nextAttempt","delayed","disconnect","setErrorCallbacks","calls","setClosedCallbacks","getNetworkInfo","hostname","getConnectionInfo","url","socket","getDefault","query","setDefaults","myOpts","toUpperCase","overlay","findPorts","setSerialCallbacks","openPort","properties","closePort","listDevices","includeHubs","listInterfaces","deviceInfo","listEndpoints","interface","setUsbCallbacks","claimDevice","isClaimed","endpoint","readData","responseSize","openStream","closeStream","releaseDevice","startListening","stopListening","setHidCallbacks","setCertificatePromise","promiseCall","setSignaturePromise","promiseGen","showDebug","show","getVersion","setPromiseType","promiser","hasher","setWebSocketType","crypto","createHash","update","digest","ignore"],"mappings":"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","file":"js/app.808054f3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","/*!\n * @overview  RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.1.0\n */\n\n//@formatter:off\n(function(){\"use strict\";function lib$rsvp$utils$$objectOrFunction(x){return typeof x===\"function\"||typeof x===\"object\"&&x!==null}function lib$rsvp$utils$$isFunction(x){return typeof x===\"function\"}function lib$rsvp$utils$$isMaybeThenable(x){return typeof x===\"object\"&&x!==null}var lib$rsvp$utils$$_isArray;if(!Array.isArray){lib$rsvp$utils$$_isArray=function(x){return Object.prototype.toString.call(x)===\"[object Array]\"}}else{lib$rsvp$utils$$_isArray=Array.isArray}var lib$rsvp$utils$$isArray=lib$rsvp$utils$$_isArray;var lib$rsvp$utils$$now=Date.now||function(){return(new Date).getTime()};function lib$rsvp$utils$$F(){}var lib$rsvp$utils$$o_create=Object.create||function(o){if(arguments.length>1){throw new Error(\"Second argument not supported\")}if(typeof o!==\"object\"){throw new TypeError(\"Argument must be an object\")}lib$rsvp$utils$$F.prototype=o;return new lib$rsvp$utils$$F};function lib$rsvp$events$$indexOf(callbacks,callback){for(var i=0,l=callbacks.length;i<l;i++){if(callbacks[i]===callback){return i}}return-1}function lib$rsvp$events$$callbacksFor(object){var callbacks=object._promiseCallbacks;if(!callbacks){callbacks=object._promiseCallbacks={}}return callbacks}var lib$rsvp$events$$default={mixin:function(object){object[\"on\"]=this[\"on\"];object[\"off\"]=this[\"off\"];object[\"trigger\"]=this[\"trigger\"];object._promiseCallbacks=undefined;return object},on:function(eventName,callback){if(typeof callback!==\"function\"){throw new TypeError(\"Callback must be a function\")}var allCallbacks=lib$rsvp$events$$callbacksFor(this),callbacks;callbacks=allCallbacks[eventName];if(!callbacks){callbacks=allCallbacks[eventName]=[]}if(lib$rsvp$events$$indexOf(callbacks,callback)===-1){callbacks.push(callback)}},off:function(eventName,callback){var allCallbacks=lib$rsvp$events$$callbacksFor(this),callbacks,index;if(!callback){allCallbacks[eventName]=[];return}callbacks=allCallbacks[eventName];index=lib$rsvp$events$$indexOf(callbacks,callback);if(index!==-1){callbacks.splice(index,1)}},trigger:function(eventName,options,label){var allCallbacks=lib$rsvp$events$$callbacksFor(this),callbacks,callback;if(callbacks=allCallbacks[eventName]){for(var i=0;i<callbacks.length;i++){callback=callbacks[i];callback(options,label)}}}};var lib$rsvp$config$$config={instrument:false};lib$rsvp$events$$default[\"mixin\"](lib$rsvp$config$$config);function lib$rsvp$config$$configure(name,value){if(name===\"onerror\"){lib$rsvp$config$$config[\"on\"](\"error\",value);return}if(arguments.length===2){lib$rsvp$config$$config[name]=value}else{return lib$rsvp$config$$config[name]}}var lib$rsvp$instrument$$queue=[];function lib$rsvp$instrument$$scheduleFlush(){setTimeout(function(){var entry;for(var i=0;i<lib$rsvp$instrument$$queue.length;i++){entry=lib$rsvp$instrument$$queue[i];var payload=entry.payload;payload.guid=payload.key+payload.id;payload.childGuid=payload.key+payload.childId;if(payload.error){payload.stack=payload.error.stack}lib$rsvp$config$$config[\"trigger\"](entry.name,entry.payload)}lib$rsvp$instrument$$queue.length=0},50)}function lib$rsvp$instrument$$instrument(eventName,promise,child){if(1===lib$rsvp$instrument$$queue.push({name:eventName,payload:{key:promise._guidKey,id:promise._id,eventName:eventName,detail:promise._result,childId:child&&child._id,label:promise._label,timeStamp:lib$rsvp$utils$$now(),error:lib$rsvp$config$$config[\"instrument-with-stack\"]?new Error(promise._label):null}})){lib$rsvp$instrument$$scheduleFlush()}}var lib$rsvp$instrument$$default=lib$rsvp$instrument$$instrument;function lib$rsvp$$internal$$withOwnPromise(){return new TypeError(\"A promises callback cannot return that same promise.\")}function lib$rsvp$$internal$$noop(){}var lib$rsvp$$internal$$PENDING=void 0;var lib$rsvp$$internal$$FULFILLED=1;var lib$rsvp$$internal$$REJECTED=2;var lib$rsvp$$internal$$GET_THEN_ERROR=new lib$rsvp$$internal$$ErrorObject;function lib$rsvp$$internal$$getThen(promise){try{return promise.then}catch(error){lib$rsvp$$internal$$GET_THEN_ERROR.error=error;return lib$rsvp$$internal$$GET_THEN_ERROR}}function lib$rsvp$$internal$$tryThen(then,value,fulfillmentHandler,rejectionHandler){try{then.call(value,fulfillmentHandler,rejectionHandler)}catch(e){return e}}function lib$rsvp$$internal$$handleForeignThenable(promise,thenable,then){lib$rsvp$config$$config.async(function(promise){var sealed=false;var error=lib$rsvp$$internal$$tryThen(then,thenable,function(value){if(sealed){return}sealed=true;if(thenable!==value){lib$rsvp$$internal$$resolve(promise,value)}else{lib$rsvp$$internal$$fulfill(promise,value)}},function(reason){if(sealed){return}sealed=true;lib$rsvp$$internal$$reject(promise,reason)},\"Settle: \"+(promise._label||\" unknown promise\"));if(!sealed&&error){sealed=true;lib$rsvp$$internal$$reject(promise,error)}},promise)}function lib$rsvp$$internal$$handleOwnThenable(promise,thenable){if(thenable._state===lib$rsvp$$internal$$FULFILLED){lib$rsvp$$internal$$fulfill(promise,thenable._result)}else if(thenable._state===lib$rsvp$$internal$$REJECTED){thenable._onError=null;lib$rsvp$$internal$$reject(promise,thenable._result)}else{lib$rsvp$$internal$$subscribe(thenable,undefined,function(value){if(thenable!==value){lib$rsvp$$internal$$resolve(promise,value)}else{lib$rsvp$$internal$$fulfill(promise,value)}},function(reason){lib$rsvp$$internal$$reject(promise,reason)})}}function lib$rsvp$$internal$$handleMaybeThenable(promise,maybeThenable){if(maybeThenable.constructor===promise.constructor){lib$rsvp$$internal$$handleOwnThenable(promise,maybeThenable)}else{var then=lib$rsvp$$internal$$getThen(maybeThenable);if(then===lib$rsvp$$internal$$GET_THEN_ERROR){lib$rsvp$$internal$$reject(promise,lib$rsvp$$internal$$GET_THEN_ERROR.error)}else if(then===undefined){lib$rsvp$$internal$$fulfill(promise,maybeThenable)}else if(lib$rsvp$utils$$isFunction(then)){lib$rsvp$$internal$$handleForeignThenable(promise,maybeThenable,then)}else{lib$rsvp$$internal$$fulfill(promise,maybeThenable)}}}function lib$rsvp$$internal$$resolve(promise,value){if(promise===value){lib$rsvp$$internal$$fulfill(promise,value)}else if(lib$rsvp$utils$$objectOrFunction(value)){lib$rsvp$$internal$$handleMaybeThenable(promise,value)}else{lib$rsvp$$internal$$fulfill(promise,value)}}function lib$rsvp$$internal$$publishRejection(promise){if(promise._onError){promise._onError(promise._result)}lib$rsvp$$internal$$publish(promise)}function lib$rsvp$$internal$$fulfill(promise,value){if(promise._state!==lib$rsvp$$internal$$PENDING){return}promise._result=value;promise._state=lib$rsvp$$internal$$FULFILLED;if(promise._subscribers.length===0){if(lib$rsvp$config$$config.instrument){lib$rsvp$instrument$$default(\"fulfilled\",promise)}}else{lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish,promise)}}function lib$rsvp$$internal$$reject(promise,reason){if(promise._state!==lib$rsvp$$internal$$PENDING){return}promise._state=lib$rsvp$$internal$$REJECTED;promise._result=reason;lib$rsvp$config$$config.async(lib$rsvp$$internal$$publishRejection,promise)}function lib$rsvp$$internal$$subscribe(parent,child,onFulfillment,onRejection){var subscribers=parent._subscribers;var length=subscribers.length;parent._onError=null;subscribers[length]=child;subscribers[length+lib$rsvp$$internal$$FULFILLED]=onFulfillment;subscribers[length+lib$rsvp$$internal$$REJECTED]=onRejection;if(length===0&&parent._state){lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish,parent)}}function lib$rsvp$$internal$$publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(lib$rsvp$config$$config.instrument){lib$rsvp$instrument$$default(settled===lib$rsvp$$internal$$FULFILLED?\"fulfilled\":\"rejected\",promise)}if(subscribers.length===0){return}var child,callback,detail=promise._result;for(var i=0;i<subscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){lib$rsvp$$internal$$invokeCallback(settled,child,callback,detail)}else{callback(detail)}}promise._subscribers.length=0}function lib$rsvp$$internal$$ErrorObject(){this.error=null}var lib$rsvp$$internal$$TRY_CATCH_ERROR=new lib$rsvp$$internal$$ErrorObject;function lib$rsvp$$internal$$tryCatch(callback,detail){try{return callback(detail)}catch(e){lib$rsvp$$internal$$TRY_CATCH_ERROR.error=e;return lib$rsvp$$internal$$TRY_CATCH_ERROR}}function lib$rsvp$$internal$$invokeCallback(settled,promise,callback,detail){var hasCallback=lib$rsvp$utils$$isFunction(callback),value,error,succeeded,failed;if(hasCallback){value=lib$rsvp$$internal$$tryCatch(callback,detail);if(value===lib$rsvp$$internal$$TRY_CATCH_ERROR){failed=true;error=value.error;value=null}else{succeeded=true}if(promise===value){lib$rsvp$$internal$$reject(promise,lib$rsvp$$internal$$withOwnPromise());return}}else{value=detail;succeeded=true}if(promise._state!==lib$rsvp$$internal$$PENDING){}else if(hasCallback&&succeeded){lib$rsvp$$internal$$resolve(promise,value)}else if(failed){lib$rsvp$$internal$$reject(promise,error)}else if(settled===lib$rsvp$$internal$$FULFILLED){lib$rsvp$$internal$$fulfill(promise,value)}else if(settled===lib$rsvp$$internal$$REJECTED){lib$rsvp$$internal$$reject(promise,value)}}function lib$rsvp$$internal$$initializePromise(promise,resolver){var resolved=false;try{resolver(function resolvePromise(value){if(resolved){return}resolved=true;lib$rsvp$$internal$$resolve(promise,value)},function rejectPromise(reason){if(resolved){return}resolved=true;lib$rsvp$$internal$$reject(promise,reason)})}catch(e){lib$rsvp$$internal$$reject(promise,e)}}function lib$rsvp$enumerator$$makeSettledResult(state,position,value){if(state===lib$rsvp$$internal$$FULFILLED){return{state:\"fulfilled\",value:value}}else{return{state:\"rejected\",reason:value}}}function lib$rsvp$enumerator$$Enumerator(Constructor,input,abortOnReject,label){var enumerator=this;enumerator._instanceConstructor=Constructor;enumerator.promise=new Constructor(lib$rsvp$$internal$$noop,label);enumerator._abortOnReject=abortOnReject;if(enumerator._validateInput(input)){enumerator._input=input;enumerator.length=input.length;enumerator._remaining=input.length;enumerator._init();if(enumerator.length===0){lib$rsvp$$internal$$fulfill(enumerator.promise,enumerator._result)}else{enumerator.length=enumerator.length||0;enumerator._enumerate();if(enumerator._remaining===0){lib$rsvp$$internal$$fulfill(enumerator.promise,enumerator._result)}}}else{lib$rsvp$$internal$$reject(enumerator.promise,enumerator._validationError())}}var lib$rsvp$enumerator$$default=lib$rsvp$enumerator$$Enumerator;lib$rsvp$enumerator$$Enumerator.prototype._validateInput=function(input){return lib$rsvp$utils$$isArray(input)};lib$rsvp$enumerator$$Enumerator.prototype._validationError=function(){return new Error(\"Array Methods must be provided an Array\")};lib$rsvp$enumerator$$Enumerator.prototype._init=function(){this._result=new Array(this.length)};lib$rsvp$enumerator$$Enumerator.prototype._enumerate=function(){var enumerator=this;var length=enumerator.length;var promise=enumerator.promise;var input=enumerator._input;for(var i=0;promise._state===lib$rsvp$$internal$$PENDING&&i<length;i++){enumerator._eachEntry(input[i],i)}};lib$rsvp$enumerator$$Enumerator.prototype._eachEntry=function(entry,i){var enumerator=this;var c=enumerator._instanceConstructor;if(lib$rsvp$utils$$isMaybeThenable(entry)){if(entry.constructor===c&&entry._state!==lib$rsvp$$internal$$PENDING){entry._onError=null;enumerator._settledAt(entry._state,i,entry._result)}else{enumerator._willSettleAt(c.resolve(entry),i)}}else{enumerator._remaining--;enumerator._result[i]=enumerator._makeResult(lib$rsvp$$internal$$FULFILLED,i,entry)}};lib$rsvp$enumerator$$Enumerator.prototype._settledAt=function(state,i,value){var enumerator=this;var promise=enumerator.promise;if(promise._state===lib$rsvp$$internal$$PENDING){enumerator._remaining--;if(enumerator._abortOnReject&&state===lib$rsvp$$internal$$REJECTED){lib$rsvp$$internal$$reject(promise,value)}else{enumerator._result[i]=enumerator._makeResult(state,i,value)}}if(enumerator._remaining===0){lib$rsvp$$internal$$fulfill(promise,enumerator._result)}};lib$rsvp$enumerator$$Enumerator.prototype._makeResult=function(state,i,value){return value};lib$rsvp$enumerator$$Enumerator.prototype._willSettleAt=function(promise,i){var enumerator=this;lib$rsvp$$internal$$subscribe(promise,undefined,function(value){enumerator._settledAt(lib$rsvp$$internal$$FULFILLED,i,value)},function(reason){enumerator._settledAt(lib$rsvp$$internal$$REJECTED,i,reason)})};function lib$rsvp$promise$all$$all(entries,label){return new lib$rsvp$enumerator$$default(this,entries,true,label).promise}var lib$rsvp$promise$all$$default=lib$rsvp$promise$all$$all;function lib$rsvp$promise$race$$race(entries,label){var Constructor=this;var promise=new Constructor(lib$rsvp$$internal$$noop,label);if(!lib$rsvp$utils$$isArray(entries)){lib$rsvp$$internal$$reject(promise,new TypeError(\"You must pass an array to race.\"));return promise}var length=entries.length;function onFulfillment(value){lib$rsvp$$internal$$resolve(promise,value)}function onRejection(reason){lib$rsvp$$internal$$reject(promise,reason)}for(var i=0;promise._state===lib$rsvp$$internal$$PENDING&&i<length;i++){lib$rsvp$$internal$$subscribe(Constructor.resolve(entries[i]),undefined,onFulfillment,onRejection)}return promise}var lib$rsvp$promise$race$$default=lib$rsvp$promise$race$$race;function lib$rsvp$promise$resolve$$resolve(object,label){var Constructor=this;if(object&&typeof object===\"object\"&&object.constructor===Constructor){return object}var promise=new Constructor(lib$rsvp$$internal$$noop,label);lib$rsvp$$internal$$resolve(promise,object);return promise}var lib$rsvp$promise$resolve$$default=lib$rsvp$promise$resolve$$resolve;function lib$rsvp$promise$reject$$reject(reason,label){var Constructor=this;var promise=new Constructor(lib$rsvp$$internal$$noop,label);lib$rsvp$$internal$$reject(promise,reason);return promise}var lib$rsvp$promise$reject$$default=lib$rsvp$promise$reject$$reject;var lib$rsvp$promise$$guidKey=\"rsvp_\"+lib$rsvp$utils$$now()+\"-\";var lib$rsvp$promise$$counter=0;function lib$rsvp$promise$$needsResolver(){throw new TypeError(\"You must pass a resolver function as the first argument to the promise constructor\")}function lib$rsvp$promise$$needsNew(){throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\")}function lib$rsvp$promise$$Promise(resolver,label){var promise=this;promise._id=lib$rsvp$promise$$counter++;promise._label=label;promise._state=undefined;promise._result=undefined;promise._subscribers=[];if(lib$rsvp$config$$config.instrument){lib$rsvp$instrument$$default(\"created\",promise)}if(lib$rsvp$$internal$$noop!==resolver){if(!lib$rsvp$utils$$isFunction(resolver)){lib$rsvp$promise$$needsResolver()}if(!(promise instanceof lib$rsvp$promise$$Promise)){lib$rsvp$promise$$needsNew()}lib$rsvp$$internal$$initializePromise(promise,resolver)}}var lib$rsvp$promise$$default=lib$rsvp$promise$$Promise;lib$rsvp$promise$$Promise.cast=lib$rsvp$promise$resolve$$default;lib$rsvp$promise$$Promise.all=lib$rsvp$promise$all$$default;lib$rsvp$promise$$Promise.race=lib$rsvp$promise$race$$default;lib$rsvp$promise$$Promise.resolve=lib$rsvp$promise$resolve$$default;lib$rsvp$promise$$Promise.reject=lib$rsvp$promise$reject$$default;lib$rsvp$promise$$Promise.prototype={constructor:lib$rsvp$promise$$Promise,_guidKey:lib$rsvp$promise$$guidKey,_onError:function(reason){var promise=this;lib$rsvp$config$$config.after(function(){if(promise._onError){lib$rsvp$config$$config[\"trigger\"](\"error\",reason,promise._label)}})},then:function(onFulfillment,onRejection,label){var parent=this;var state=parent._state;if(state===lib$rsvp$$internal$$FULFILLED&&!onFulfillment||state===lib$rsvp$$internal$$REJECTED&&!onRejection){if(lib$rsvp$config$$config.instrument){lib$rsvp$instrument$$default(\"chained\",parent,parent)}return parent}parent._onError=null;var child=new parent.constructor(lib$rsvp$$internal$$noop,label);var result=parent._result;if(lib$rsvp$config$$config.instrument){lib$rsvp$instrument$$default(\"chained\",parent,child)}if(state){var callback=arguments[state-1];lib$rsvp$config$$config.async(function(){lib$rsvp$$internal$$invokeCallback(state,child,callback,result)})}else{lib$rsvp$$internal$$subscribe(parent,child,onFulfillment,onRejection)}return child},\"catch\":function(onRejection,label){return this.then(undefined,onRejection,label)},\"finally\":function(callback,label){var promise=this;var constructor=promise.constructor;return promise.then(function(value){return constructor.resolve(callback()).then(function(){return value})},function(reason){return constructor.resolve(callback()).then(function(){throw reason})},label)}};function lib$rsvp$all$settled$$AllSettled(Constructor,entries,label){this._superConstructor(Constructor,entries,false,label)}lib$rsvp$all$settled$$AllSettled.prototype=lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);lib$rsvp$all$settled$$AllSettled.prototype._superConstructor=lib$rsvp$enumerator$$default;lib$rsvp$all$settled$$AllSettled.prototype._makeResult=lib$rsvp$enumerator$$makeSettledResult;lib$rsvp$all$settled$$AllSettled.prototype._validationError=function(){return new Error(\"allSettled must be called with an array\")};function lib$rsvp$all$settled$$allSettled(entries,label){return new lib$rsvp$all$settled$$AllSettled(lib$rsvp$promise$$default,entries,label).promise}var lib$rsvp$all$settled$$default=lib$rsvp$all$settled$$allSettled;function lib$rsvp$all$$all(array,label){return lib$rsvp$promise$$default.all(array,label)}var lib$rsvp$all$$default=lib$rsvp$all$$all;var lib$rsvp$asap$$len=0;var lib$rsvp$asap$$toString={}.toString;var lib$rsvp$asap$$vertxNext;function lib$rsvp$asap$$asap(callback,arg){lib$rsvp$asap$$queue[lib$rsvp$asap$$len]=callback;lib$rsvp$asap$$queue[lib$rsvp$asap$$len+1]=arg;lib$rsvp$asap$$len+=2;if(lib$rsvp$asap$$len===2){lib$rsvp$asap$$scheduleFlush()}}var lib$rsvp$asap$$default=lib$rsvp$asap$$asap;var lib$rsvp$asap$$browserWindow=typeof window!==\"undefined\"?window:undefined;var lib$rsvp$asap$$browserGlobal=lib$rsvp$asap$$browserWindow||{};var lib$rsvp$asap$$BrowserMutationObserver=lib$rsvp$asap$$browserGlobal.MutationObserver||lib$rsvp$asap$$browserGlobal.WebKitMutationObserver;var lib$rsvp$asap$$isNode=typeof self===\"undefined\"&&typeof process!==\"undefined\"&&{}.toString.call(process)===\"[object process]\";var lib$rsvp$asap$$isWorker=typeof Uint8ClampedArray!==\"undefined\"&&typeof importScripts!==\"undefined\"&&typeof MessageChannel!==\"undefined\";function lib$rsvp$asap$$useNextTick(){var nextTick=process.nextTick;var version=process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);if(Array.isArray(version)&&version[1]===\"0\"&&version[2]===\"10\"){nextTick=setImmediate}return function(){nextTick(lib$rsvp$asap$$flush)}}function lib$rsvp$asap$$useVertxTimer(){return function(){lib$rsvp$asap$$vertxNext(lib$rsvp$asap$$flush)}}function lib$rsvp$asap$$useMutationObserver(){var iterations=0;var observer=new lib$rsvp$asap$$BrowserMutationObserver(lib$rsvp$asap$$flush);var node=document.createTextNode(\"\");observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2}}function lib$rsvp$asap$$useMessageChannel(){var channel=new MessageChannel;channel.port1.onmessage=lib$rsvp$asap$$flush;return function(){channel.port2.postMessage(0)}}function lib$rsvp$asap$$useSetTimeout(){return function(){setTimeout(lib$rsvp$asap$$flush,1)}}var lib$rsvp$asap$$queue=new Array(1e3);function lib$rsvp$asap$$flush(){for(var i=0;i<lib$rsvp$asap$$len;i+=2){var callback=lib$rsvp$asap$$queue[i];var arg=lib$rsvp$asap$$queue[i+1];callback(arg);lib$rsvp$asap$$queue[i]=undefined;lib$rsvp$asap$$queue[i+1]=undefined}lib$rsvp$asap$$len=0}function lib$rsvp$asap$$attemptVertex(){try{var r=require;var vertx=r(\"vertx\");lib$rsvp$asap$$vertxNext=vertx.runOnLoop||vertx.runOnContext;return lib$rsvp$asap$$useVertxTimer()}catch(e){return lib$rsvp$asap$$useSetTimeout()}}var lib$rsvp$asap$$scheduleFlush;if(lib$rsvp$asap$$isNode){lib$rsvp$asap$$scheduleFlush=lib$rsvp$asap$$useNextTick()}else if(lib$rsvp$asap$$BrowserMutationObserver){lib$rsvp$asap$$scheduleFlush=lib$rsvp$asap$$useMutationObserver()}else if(lib$rsvp$asap$$isWorker){lib$rsvp$asap$$scheduleFlush=lib$rsvp$asap$$useMessageChannel()}else if(lib$rsvp$asap$$browserWindow===undefined&&typeof require===\"function\"){lib$rsvp$asap$$scheduleFlush=lib$rsvp$asap$$attemptVertex()}else{lib$rsvp$asap$$scheduleFlush=lib$rsvp$asap$$useSetTimeout()}function lib$rsvp$defer$$defer(label){var deferred={};deferred[\"promise\"]=new lib$rsvp$promise$$default(function(resolve,reject){deferred[\"resolve\"]=resolve;deferred[\"reject\"]=reject},label);return deferred}var lib$rsvp$defer$$default=lib$rsvp$defer$$defer;function lib$rsvp$filter$$filter(promises,filterFn,label){return lib$rsvp$promise$$default.all(promises,label).then(function(values){if(!lib$rsvp$utils$$isFunction(filterFn)){throw new TypeError(\"You must pass a function as filter's second argument.\")}var length=values.length;var filtered=new Array(length);for(var i=0;i<length;i++){filtered[i]=filterFn(values[i])}return lib$rsvp$promise$$default.all(filtered,label).then(function(filtered){var results=new Array(length);var newLength=0;for(var i=0;i<length;i++){if(filtered[i]){results[newLength]=values[i];newLength++}}results.length=newLength;return results})})}var lib$rsvp$filter$$default=lib$rsvp$filter$$filter;function lib$rsvp$promise$hash$$PromiseHash(Constructor,object,label){this._superConstructor(Constructor,object,true,label)}var lib$rsvp$promise$hash$$default=lib$rsvp$promise$hash$$PromiseHash;lib$rsvp$promise$hash$$PromiseHash.prototype=lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);lib$rsvp$promise$hash$$PromiseHash.prototype._superConstructor=lib$rsvp$enumerator$$default;lib$rsvp$promise$hash$$PromiseHash.prototype._init=function(){this._result={}};lib$rsvp$promise$hash$$PromiseHash.prototype._validateInput=function(input){return input&&typeof input===\"object\"};lib$rsvp$promise$hash$$PromiseHash.prototype._validationError=function(){return new Error(\"Promise.hash must be called with an object\")};lib$rsvp$promise$hash$$PromiseHash.prototype._enumerate=function(){var enumerator=this;var promise=enumerator.promise;var input=enumerator._input;var results=[];for(var key in input){if(promise._state===lib$rsvp$$internal$$PENDING&&Object.prototype.hasOwnProperty.call(input,key)){results.push({position:key,entry:input[key]})}}var length=results.length;enumerator._remaining=length;var result;for(var i=0;promise._state===lib$rsvp$$internal$$PENDING&&i<length;i++){result=results[i];enumerator._eachEntry(result.entry,result.position)}};function lib$rsvp$hash$settled$$HashSettled(Constructor,object,label){this._superConstructor(Constructor,object,false,label)}lib$rsvp$hash$settled$$HashSettled.prototype=lib$rsvp$utils$$o_create(lib$rsvp$promise$hash$$default.prototype);lib$rsvp$hash$settled$$HashSettled.prototype._superConstructor=lib$rsvp$enumerator$$default;lib$rsvp$hash$settled$$HashSettled.prototype._makeResult=lib$rsvp$enumerator$$makeSettledResult;lib$rsvp$hash$settled$$HashSettled.prototype._validationError=function(){return new Error(\"hashSettled must be called with an object\")};function lib$rsvp$hash$settled$$hashSettled(object,label){return new lib$rsvp$hash$settled$$HashSettled(lib$rsvp$promise$$default,object,label).promise}var lib$rsvp$hash$settled$$default=lib$rsvp$hash$settled$$hashSettled;function lib$rsvp$hash$$hash(object,label){return new lib$rsvp$promise$hash$$default(lib$rsvp$promise$$default,object,label).promise}var lib$rsvp$hash$$default=lib$rsvp$hash$$hash;function lib$rsvp$map$$map(promises,mapFn,label){return lib$rsvp$promise$$default.all(promises,label).then(function(values){if(!lib$rsvp$utils$$isFunction(mapFn)){throw new TypeError(\"You must pass a function as map's second argument.\")}var length=values.length;var results=new Array(length);for(var i=0;i<length;i++){results[i]=mapFn(values[i])}return lib$rsvp$promise$$default.all(results,label)})}var lib$rsvp$map$$default=lib$rsvp$map$$map;function lib$rsvp$node$$Result(){this.value=undefined}var lib$rsvp$node$$ERROR=new lib$rsvp$node$$Result;var lib$rsvp$node$$GET_THEN_ERROR=new lib$rsvp$node$$Result;function lib$rsvp$node$$getThen(obj){try{return obj.then}catch(error){lib$rsvp$node$$ERROR.value=error;return lib$rsvp$node$$ERROR}}function lib$rsvp$node$$tryApply(f,s,a){try{f.apply(s,a)}catch(error){lib$rsvp$node$$ERROR.value=error;return lib$rsvp$node$$ERROR}}function lib$rsvp$node$$makeObject(_,argumentNames){var obj={};var name;var i;var length=_.length;var args=new Array(length);for(var x=0;x<length;x++){args[x]=_[x]}for(i=0;i<argumentNames.length;i++){name=argumentNames[i];obj[name]=args[i+1]}return obj}function lib$rsvp$node$$arrayResult(_){var length=_.length;var args=new Array(length-1);for(var i=1;i<length;i++){args[i-1]=_[i]}return args}function lib$rsvp$node$$wrapThenable(then,promise){return{then:function(onFulFillment,onRejection){return then.call(promise,onFulFillment,onRejection)}}}function lib$rsvp$node$$denodeify(nodeFunc,options){var fn=function(){var self=this;var l=arguments.length;var args=new Array(l+1);var arg;var promiseInput=false;for(var i=0;i<l;++i){arg=arguments[i];if(!promiseInput){promiseInput=lib$rsvp$node$$needsPromiseInput(arg);if(promiseInput===lib$rsvp$node$$GET_THEN_ERROR){var p=new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);lib$rsvp$$internal$$reject(p,lib$rsvp$node$$GET_THEN_ERROR.value);return p}else if(promiseInput&&promiseInput!==true){arg=lib$rsvp$node$$wrapThenable(promiseInput,arg)}}args[i]=arg}var promise=new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);args[l]=function(err,val){if(err)lib$rsvp$$internal$$reject(promise,err);else if(options===undefined)lib$rsvp$$internal$$resolve(promise,val);else if(options===true)lib$rsvp$$internal$$resolve(promise,lib$rsvp$node$$arrayResult(arguments));else if(lib$rsvp$utils$$isArray(options))lib$rsvp$$internal$$resolve(promise,lib$rsvp$node$$makeObject(arguments,options));else lib$rsvp$$internal$$resolve(promise,val)};if(promiseInput){return lib$rsvp$node$$handlePromiseInput(promise,args,nodeFunc,self)}else{return lib$rsvp$node$$handleValueInput(promise,args,nodeFunc,self)}};fn.__proto__=nodeFunc;return fn}var lib$rsvp$node$$default=lib$rsvp$node$$denodeify;function lib$rsvp$node$$handleValueInput(promise,args,nodeFunc,self){var result=lib$rsvp$node$$tryApply(nodeFunc,self,args);if(result===lib$rsvp$node$$ERROR){lib$rsvp$$internal$$reject(promise,result.value)}return promise}function lib$rsvp$node$$handlePromiseInput(promise,args,nodeFunc,self){return lib$rsvp$promise$$default.all(args).then(function(args){var result=lib$rsvp$node$$tryApply(nodeFunc,self,args);if(result===lib$rsvp$node$$ERROR){lib$rsvp$$internal$$reject(promise,result.value)}return promise})}function lib$rsvp$node$$needsPromiseInput(arg){if(arg&&typeof arg===\"object\"){if(arg.constructor===lib$rsvp$promise$$default){return true}else{return lib$rsvp$node$$getThen(arg)}}else{return false}}var lib$rsvp$platform$$platform;if(typeof self===\"object\"){lib$rsvp$platform$$platform=self}else if(typeof global===\"object\"){lib$rsvp$platform$$platform=global}else{throw new Error(\"no global: `self` or `global` found\")}var lib$rsvp$platform$$default=lib$rsvp$platform$$platform;function lib$rsvp$race$$race(array,label){return lib$rsvp$promise$$default.race(array,label)}var lib$rsvp$race$$default=lib$rsvp$race$$race;function lib$rsvp$reject$$reject(reason,label){return lib$rsvp$promise$$default.reject(reason,label)}var lib$rsvp$reject$$default=lib$rsvp$reject$$reject;function lib$rsvp$resolve$$resolve(value,label){return lib$rsvp$promise$$default.resolve(value,label)}var lib$rsvp$resolve$$default=lib$rsvp$resolve$$resolve;function lib$rsvp$rethrow$$rethrow(reason){setTimeout(function(){throw reason});throw reason}var lib$rsvp$rethrow$$default=lib$rsvp$rethrow$$rethrow;lib$rsvp$config$$config.async=lib$rsvp$asap$$default;lib$rsvp$config$$config.after=function(cb){setTimeout(cb,0)};var lib$rsvp$$cast=lib$rsvp$resolve$$default;function lib$rsvp$$async(callback,arg){lib$rsvp$config$$config.async(callback,arg)}function lib$rsvp$$on(){lib$rsvp$config$$config[\"on\"].apply(lib$rsvp$config$$config,arguments)}function lib$rsvp$$off(){lib$rsvp$config$$config[\"off\"].apply(lib$rsvp$config$$config,arguments)}if(typeof window!==\"undefined\"&&typeof window[\"__PROMISE_INSTRUMENTATION__\"]===\"object\"){var lib$rsvp$$callbacks=window[\"__PROMISE_INSTRUMENTATION__\"];lib$rsvp$config$$configure(\"instrument\",true);for(var lib$rsvp$$eventName in lib$rsvp$$callbacks){if(lib$rsvp$$callbacks.hasOwnProperty(lib$rsvp$$eventName)){lib$rsvp$$on(lib$rsvp$$eventName,lib$rsvp$$callbacks[lib$rsvp$$eventName])}}}var lib$rsvp$umd$$RSVP={race:lib$rsvp$race$$default,Promise:lib$rsvp$promise$$default,allSettled:lib$rsvp$all$settled$$default,hash:lib$rsvp$hash$$default,hashSettled:lib$rsvp$hash$settled$$default,denodeify:lib$rsvp$node$$default,on:lib$rsvp$$on,off:lib$rsvp$$off,map:lib$rsvp$map$$default,filter:lib$rsvp$filter$$default,resolve:lib$rsvp$resolve$$default,reject:lib$rsvp$reject$$default,all:lib$rsvp$all$$default,rethrow:lib$rsvp$rethrow$$default,defer:lib$rsvp$defer$$default,EventTarget:lib$rsvp$events$$default,configure:lib$rsvp$config$$configure,async:lib$rsvp$$async};if(typeof define===\"function\"&&define[\"amd\"]){define(function(){return lib$rsvp$umd$$RSVP})}else if(typeof module!==\"undefined\"&&module[\"exports\"]){module[\"exports\"]=lib$rsvp$umd$$RSVP}else if(typeof lib$rsvp$platform$$default!==\"undefined\"){lib$rsvp$platform$$default[\"RSVP\"]=lib$rsvp$umd$$RSVP}}).call(this);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"row m-0 mt-3 justify-content-center\"},[_c('div',{staticClass:\"col-4\"},[_c('label',[_vm._v(\"\\n                Printer name\\n                \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.printerName),expression:\"printerName\"}],staticClass:\"custom-select\",attrs:{\"id\":\"inputGroupSelect01\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.printerName=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.printers),function(printer){return _c('option',{key:printer,domProps:{\"value\":printer}},[_vm._v(\"\\n                        \"+_vm._s(printer)+\"\\n                    \")])}),0)]),_c('br'),_c('label',[_vm._v(\"\\n                Product code\\n                \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.productCode),expression:\"productCode\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.productCode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.productCode=$event.target.value}}})]),_c('br'),_c('label',[_vm._v(\"\\n                Barcode\\n                \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.barcode),expression:\"barcode\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.barcode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.barcode=$event.target.value}}})]),_c('br'),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.print}},[_vm._v(\"Print\")])]),_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-6\"},[_c('canvas',{attrs:{\"id\":\"canvas\"}})])}]\n\nexport { render, staticRenderFns }","require('./js/rsvp-3.1.0.min') // https://demo.qz.io/js/dependencies/rsvp-3.1.0.min.js\nrequire('./js/qz-tray') // https://demo.qz.io/js/qz-tray.js\nconst JsBarcode = require('jsbarcode')\nconst sha256 = require('js-sha256')\n\nqz.api.setSha256Type(function (data) {\n    return sha256(data)\n})\n\nexport const connect = () => {\n    return qz.websocket.connect().then(function () {\n        alert('Connected!')\n    })\n}\n\nexport const printBarcode = (printerName, productCode, barcode) => {\n    const base64 = getBarcodeData(productCode, barcode)\n    const barcodeImg = base64.split(',')[1]\n    const printData = [{type: 'image', format: 'base64', data: barcodeImg}]\n\n    qz.websocket.connect()\n        .then(function () {\n            const config = qz.configs.create(printerName)\n            return qz.print(config, printData)\n        })\n        .catch(function (err) {\n            alert(err)\n            console.log(err)\n        })\n}\n\nfunction getBarcodeData(productCode = '', barcode = '') {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    JsBarcode(canvas, barcode, {format: 'CODE39', marginBottom: 30})\n    ctx.font = '14px Arial'\n    ctx.textAlign = 'center'\n    ctx.fillText(productCode, -(canvas.width / 2) + 10, canvas.height - 10, canvas.width)\n    return canvas.toDataURL('image/png')\n}\n\n// for view testing\nexport const renderBarcodeDemo = (elementId, productCode, barcode) => {\n    if (!elementId || !productCode || !barcode) {\n        return\n    }\n    JsBarcode('#' + elementId, barcode, {format: 'CODE39', marginBottom: 30})\n    const canvas = document.getElementById(elementId)\n    if (!canvas) {\n        return\n    }\n    const ctx = canvas.getContext('2d')\n    ctx.font = '14px Arial'\n    ctx.textAlign = 'center'\n    ctx.fillText(productCode, -(canvas.width / 2) + 10, canvas.height - 10, canvas.width)\n}\n\nexport const getAvailablePrinters = () => {\n    return qz.printers.find()\n        .then(function (data) {\n            if (!data || data.length === 0) {\n                alert('No available printers')\n            }\n            console.log('AVAILABLE PRINTERS: ', data)\n            return data\n        })\n        .catch(function (err) {\n            // alert(err)\n            console.log(err)\n        })\n}\n\n// TODO: how to set size?\n// The barcode height n is measured in dots. One dot equals 0.12499975mm\n// const barcodeWidth = 40 / 0.12499975 // 320 dots\n// const bacodeHeight = 28 / 0.12499975 // 228 dots\n\n// https://codepen.io/gabrieleromanato/pen/CuviB\n// millimeters.width = Math.floor(width * 0.264583);\n// millimeters.height = Math.floor(height * 0.264583);\n","<template>\n    <div id=\"app\">\n        <div class=\"row m-0 mt-3 justify-content-center\">\n            <div class=\"col-4\">\n                <label>\n                    Printer name\n                    <select v-model=\"printerName\" class=\"custom-select\" id=\"inputGroupSelect01\">\n                        <option v-for=\"printer in printers\" :key=\"printer\" :value=\"printer\">\n                            {{ printer }}\n                        </option>\n                    </select>\n                </label>\n                <br>\n                <label>\n                    Product code\n                    <input v-model=\"productCode\" type=\"text\" class=\"form-control\">\n                </label>\n                <br>\n                <label>\n                    Barcode\n                    <input v-model=\"barcode\" type=\"text\" class=\"form-control\">\n                </label>\n                <br>\n                <button @click=\"print\" class=\"btn btn-primary\">Print</button>\n            </div>\n            <div class=\"col-6\">\n                <canvas id=\"canvas\"></canvas>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {connect, getAvailablePrinters, printBarcode, renderBarcodeDemo} from './print-barcode'\n\n    export default {\n        name: 'app',\n        data() {\n            return {\n                printers: [],\n                printerName: '',\n                productCode: 'UVP10155 - ICE BLACK C',\n                barcode: '0811171'\n            }\n        },\n        methods: {\n            print() {\n                printBarcode(this.printerName, this.productCode, this.barcode)\n            },\n\n            renderDemo() {\n                renderBarcodeDemo('canvas', this.productCode, this.barcode)\n            }\n        },\n        mounted() {\n            connect()\n                .then(() => {\n                    return getAvailablePrinters()\n                })\n                .then(printers => {\n                    this.printers = printers || []\n                })\n\n            this.renderDemo()\n        },\n        watch: {\n            'productCode': 'renderDemo',\n            'barcode': 'renderDemo'\n        }\n    }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        color: #2c3e50;\n    }\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=fb85eda4&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","'use strict';\n\n/**\n * @version 2.0.8;\n * @overview QZ Tray Connector\n * <p/>\n * Connects a web client to the QZ Tray software.\n * Enables printing and device communication from javascript.\n *\n * @requires RSVP\n *     Provides Promises/A+ functionality for API calls.\n *     Can be overridden via <code>qz.api.setPromiseType</code> to remove dependency.\n * @requires Sha256\n *     Provides hashing algorithm for signing messages.\n *     Can be overridden via <code>qz.api.setSha256Type</code> to remove dependency.\n */\nvar qz = (function() {\n\n///// POLYFILLS /////\n\n    if (!Array.isArray) {\n        Array.isArray = function(arg) {\n            return Object.prototype.toString.call(arg) === '[object Array]';\n        };\n    }\n\n\n///// PRIVATE METHODS /////\n\n    var _qz = {\n        VERSION: \"2.0.8\",                              //must match @version above\n        DEBUG: false,\n\n        log: {\n            /** Debugging messages */\n            trace: function() { if (_qz.DEBUG) { console.log.apply(console, arguments); } },\n            /** General messages */\n            info: function() { console.info.apply(console, arguments); },\n            /** Debugging errors */\n            warn: function() { if (_qz.DEBUG) { console.warn.apply(console, arguments); } },\n            /** General errors */\n            error: function() { console.error.apply(console, arguments); }\n        },\n\n\n        //stream types\n        streams: {\n            serial: 'SERIAL', usb: 'USB', hid: 'HID'\n        },\n\n\n        websocket: {\n            /** The actual websocket object managing the connection. */\n            connection: null,\n\n            /** Default parameters used on new connections. Override values using options parameter on {@link qz.websocket.connect}. */\n            connectConfig: {\n                host: [\"localhost\", \"localhost.qz.io\"], //hosts QZ Tray can be running on\n                hostIndex: 0,                           //internal var - index on host array\n                usingSecure: true,                      //boolean use of secure protocol\n                protocol: {\n                    secure: \"wss://\",                   //secure websocket\n                    insecure: \"ws://\"                   //insecure websocket\n                },\n                port: {\n                    secure: [8181, 8282, 8383, 8484],   //list of secure ports QZ Tray could be listening on\n                    insecure: [8182, 8283, 8384, 8485], //list of insecure ports QZ Tray could be listening on\n                    portIndex: 0                        //internal var - index on active port array\n                },\n                keepAlive: 60,                          //time between pings to keep connection alive, in seconds\n                retries: 0,                             //number of times to reconnect before failing\n                delay: 0                                //seconds before firing a connection\n            },\n\n            setup: {\n                /** Loop through possible ports to open connection, sets web socket calls that will settle the promise. */\n                findConnection: function(config, resolve, reject) {\n                    //force flag if missing ports\n                    if (!config.port.secure.length) {\n                        if (!config.port.insecure.length) {\n                            reject(new Error(\"No ports have been specified to connect over\"));\n                            return;\n                        } else if (config.usingSecure) {\n                            _qz.log.error(\"No secure ports specified - forcing insecure connection\");\n                            config.usingSecure = false;\n                        }\n                    } else if (!config.port.insecure.length && !config.usingSecure) {\n                        _qz.log.trace(\"No insecure ports specified - forcing secure connection\");\n                        config.usingSecure = true;\n                    }\n\n                    var deeper = function() {\n                        config.port.portIndex++;\n\n                        if ((config.usingSecure && config.port.portIndex >= config.port.secure.length)\n                            || (!config.usingSecure && config.port.portIndex >= config.port.insecure.length)) {\n                            if (config.hostIndex >= config.host.length - 1) {\n                                //give up, all hope is lost\n                                reject(new Error(\"Unable to establish connection with QZ\"));\n                                return;\n                            } else {\n                                config.hostIndex++;\n                                config.port.portIndex = 0;\n                            }\n                        }\n\n                        // recursive call until connection established or all ports are exhausted\n                        _qz.websocket.setup.findConnection(config, resolve, reject);\n                    };\n\n                    var address;\n                    if (config.usingSecure) {\n                        address = config.protocol.secure + config.host[config.hostIndex] + \":\" + config.port.secure[config.port.portIndex];\n                    } else {\n                        address = config.protocol.insecure + config.host[config.hostIndex] + \":\" + config.port.insecure[config.port.portIndex];\n                    }\n\n                    try {\n                        _qz.log.trace(\"Attempting connection\", address);\n                        _qz.websocket.connection = new _qz.tools.ws(address);\n                    }\n                    catch(err) {\n                        _qz.log.error(err);\n                        deeper();\n                        return;\n                    }\n\n                    if (_qz.websocket.connection != null) {\n                        _qz.websocket.connection.established = false;\n\n                        //called on successful connection to qz, begins setup of websocket calls and resolves connect promise after certificate is sent\n                        _qz.websocket.connection.onopen = function(evt) {\n                            if (!_qz.websocket.connection.established) {\n                                _qz.log.trace(evt);\n                                _qz.log.info(\"Established connection with QZ Tray on \" + address);\n\n                                _qz.websocket.setup.openConnection({ resolve: resolve, reject: reject });\n\n                                if (config.keepAlive > 0) {\n                                    var interval = setInterval(function() {\n                                        if (!qz.websocket.isActive()) {\n                                            clearInterval(interval);\n                                            return;\n                                        }\n\n                                        _qz.websocket.connection.send(\"ping\");\n                                    }, config.keepAlive * 1000);\n                                }\n                            }\n                        };\n\n                        //called during websocket close during setup\n                        _qz.websocket.connection.onclose = function() {\n                            // Safari compatibility fix to raise error event\n                            if (_qz.websocket.connection && typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1) {\n                                _qz.websocket.connection.onerror();\n                            }\n                        };\n\n                        //called for errors during setup (such as invalid ports), reject connect promise only if all ports have been tried\n                        _qz.websocket.connection.onerror = function(evt) {\n                            _qz.log.trace(evt);\n\n                            _qz.websocket.connection = null;\n\n                            deeper();\n                        };\n                    } else {\n                        reject(new Error(\"Unable to create a websocket connection\"));\n                    }\n                },\n\n                /** Finish setting calls on successful connection, sets web socket calls that won't settle the promise. */\n                openConnection: function(openPromise) {\n                    _qz.websocket.connection.established = true;\n\n                    //called when an open connection is closed\n                    _qz.websocket.connection.onclose = function(evt) {\n                        _qz.log.trace(evt);\n                        _qz.log.info(\"Closed connection with QZ Tray\");\n\n                        //if this is set, then an explicit close call was made\n                        if (_qz.websocket.connection.promise != undefined) {\n                            _qz.websocket.connection.promise.resolve();\n                        }\n\n                        _qz.websocket.callClose(evt);\n                        _qz.websocket.connection = null;\n\n                        for(var uid in _qz.websocket.pendingCalls) {\n                            if (_qz.websocket.pendingCalls.hasOwnProperty(uid)) {\n                                _qz.websocket.pendingCalls[uid].reject(new Error(\"Connection closed before response received\"));\n                            }\n                        }\n                    };\n\n                    //called for any errors with an open connection\n                    _qz.websocket.connection.onerror = function(evt) {\n                        _qz.websocket.callError(evt);\n                    };\n\n                    //send JSON objects to qz\n                    _qz.websocket.connection.sendData = function(obj) {\n                        _qz.log.trace(\"Preparing object for websocket\", obj);\n\n                        if (obj.timestamp == undefined) {\n                            obj.timestamp = Date.now();\n                            if (typeof obj.timestamp !== 'number') {\n                                obj.timestamp = new Date().getTime();\n                            }\n                        }\n                        if (obj.promise != undefined) {\n                            obj.uid = _qz.websocket.setup.newUID();\n                            _qz.websocket.pendingCalls[obj.uid] = obj.promise;\n                        }\n\n                        // track requesting monitor\n                        obj.position = {\n                            x: screen ? ((screen.availWidth || screen.width) / 2) + (screen.left || screen.availLeft) : 0,\n                            y: screen ? ((screen.availHeight || screen.height) / 2) + (screen.top || screen.availTop) : 0\n                        };\n\n                        try {\n                            if (obj.call != undefined && obj.signature == undefined) {\n                                var signObj = {\n                                    call: obj.call,\n                                    params: obj.params,\n                                    timestamp: obj.timestamp\n                                };\n\n                                //make a hashing promise if not already one\n                                var hashing = _qz.tools.hash(_qz.tools.stringify(signObj));\n                                if (!hashing.then) {\n                                    hashing = _qz.tools.promise(function(resolve) {\n                                        resolve(hashing);\n                                    });\n                                }\n\n                                hashing.then(function(hashed) {\n                                    return _qz.security.callSign(hashed);\n                                }).then(function(signature) {\n                                    _qz.log.trace(\"Signature for call\", signature);\n                                    obj.signature = signature;\n                                    _qz.signContent = undefined;\n                                    _qz.websocket.connection.send(_qz.tools.stringify(obj));\n                                });\n                            } else {\n                                _qz.log.trace(\"Signature for call\", obj.signature);\n\n                                //called for pre-signed content and (unsigned) setup calls\n                                _qz.websocket.connection.send(_qz.tools.stringify(obj));\n                            }\n                        }\n                        catch(err) {\n                            _qz.log.error(err);\n\n                            if (obj.promise != undefined) {\n                                obj.promise.reject(err);\n                                delete _qz.websocket.pendingCalls[obj.uid];\n                            }\n                        }\n                    };\n\n                    //receive message from qz\n                    _qz.websocket.connection.onmessage = function(evt) {\n                        var returned = JSON.parse(evt.data);\n\n                        if (returned.uid == null) {\n                            if (returned.type == null) {\n                                //incorrect response format, likely connected to incompatible qz version\n                                _qz.websocket.connection.close(4003, \"Connected to incompatible QZ Tray version\");\n\n                            } else {\n                                //streams (callbacks only, no promises)\n                                switch(returned.type) {\n                                    case _qz.streams.serial:\n                                        if (!returned.event) {\n                                            returned.event = JSON.stringify({ portName: returned.key, output: returned.data });\n                                        }\n\n                                        _qz.serial.callSerial(JSON.parse(returned.event));\n                                        break;\n                                    case _qz.streams.usb:\n                                        if (!returned.event) {\n                                            returned.event = JSON.stringify({ vendorId: returned.key[0], productId: returned.key[1], output: returned.data });\n                                        }\n\n                                        _qz.usb.callUsb(JSON.parse(returned.event));\n                                        break;\n                                    case _qz.streams.hid:\n                                        _qz.hid.callHid(JSON.parse(returned.event));\n                                        break;\n                                    default:\n                                        _qz.log.warn(\"Cannot determine stream type for callback\", returned);\n                                        break;\n                                }\n                            }\n\n                            return;\n                        }\n\n                        _qz.log.trace(\"Received response from websocket\", returned);\n\n                        var promise = _qz.websocket.pendingCalls[returned.uid];\n                        if (promise == undefined) {\n                            _qz.log.warn('No promise found for returned response');\n                        } else {\n                            if (returned.error != undefined) {\n                                promise.reject(new Error(returned.error));\n                            } else {\n                                promise.resolve(returned.result);\n                            }\n                        }\n\n                        delete _qz.websocket.pendingCalls[returned.uid];\n                    };\n\n\n                    //send up the certificate before making any calls\n                    //also gives the user a chance to deny the connection\n                    function sendCert(cert) {\n                        if (cert === undefined) { cert = null; }\n                        _qz.websocket.connection.sendData({ certificate: cert, promise: openPromise });\n                    }\n\n                    _qz.security.callCert().then(sendCert).catch(sendCert);\n                },\n\n                /** Generate unique ID used to map a response to a call. */\n                newUID: function() {\n                    var len = 6;\n                    return (new Array(len + 1).join(\"0\") + (Math.random() * Math.pow(36, len) << 0).toString(36)).slice(-len)\n                }\n            },\n\n            dataPromise: function(callName, params, signature, signingTimestamp) {\n                return _qz.tools.promise(function(resolve, reject) {\n                    var msg = {\n                        call: callName,\n                        promise: { resolve: resolve, reject: reject },\n                        params: params,\n                        signature: signature,\n                        timestamp: signingTimestamp\n                    };\n\n                    _qz.websocket.connection.sendData(msg);\n                });\n            },\n\n            /** Library of promises awaiting a response, uid -> promise */\n            pendingCalls: {},\n\n            /** List of functions to call on error from the websocket. */\n            errorCallbacks: [],\n            /** Calls all functions registered to listen for errors. */\n            callError: function(evt) {\n                if (Array.isArray(_qz.websocket.errorCallbacks)) {\n                    for(var i = 0; i < _qz.websocket.errorCallbacks.length; i++) {\n                        _qz.websocket.errorCallbacks[i](evt);\n                    }\n                } else {\n                    _qz.websocket.errorCallbacks(evt);\n                }\n            },\n\n            /** List of function to call on closing from the websocket. */\n            closedCallbacks: [],\n            /** Calls all functions registered to listen for closing. */\n            callClose: function(evt) {\n                if (Array.isArray(_qz.websocket.closedCallbacks)) {\n                    for(var i = 0; i < _qz.websocket.closedCallbacks.length; i++) {\n                        _qz.websocket.closedCallbacks[i](evt);\n                    }\n                } else {\n                    _qz.websocket.closedCallbacks(evt);\n                }\n            }\n        },\n\n\n        printing: {\n            /** Default options used for new printer configs. Can be overridden using {@link qz.configs.setDefaults}. */\n            defaultConfig: {\n                //value purposes are explained in the qz.configs.setDefaults docs\n\n                colorType: 'color',\n                copies: 1,\n                density: 0,\n                duplex: false,\n                fallbackDensity: null,\n                interpolation: 'bicubic',\n                jobName: null,\n                legacy: false,\n                margins: 0,\n                orientation: null,\n                paperThickness: null,\n                printerTray: null,\n                rasterize: true,\n                rotation: 0,\n                scaleContent: true,\n                size: null,\n                units: 'in',\n\n                altPrinting: false,\n                encoding: null,\n                endOfDoc: null,\n                perSpool: 1\n            }\n        },\n\n\n        serial: {\n            /** List of functions called when receiving data from serial connection. */\n            serialCallbacks: [],\n            /** Calls all functions registered to listen for serial events. */\n            callSerial: function(streamEvent) {\n                if (Array.isArray(_qz.serial.serialCallbacks)) {\n                    for(var i = 0; i < _qz.serial.serialCallbacks.length; i++) {\n                        _qz.serial.serialCallbacks[i](streamEvent);\n                    }\n                } else {\n                    _qz.serial.serialCallbacks(streamEvent);\n                }\n            }\n        },\n\n\n        usb: {\n            /** List of functions called when receiving data from usb connection. */\n            usbCallbacks: [],\n            /** Calls all functions registered to listen for usb events. */\n            callUsb: function(streamEvent) {\n                if (Array.isArray(_qz.usb.usbCallbacks)) {\n                    for(var i = 0; i < _qz.usb.usbCallbacks.length; i++) {\n                        _qz.usb.usbCallbacks[i](streamEvent);\n                    }\n                } else {\n                    _qz.usb.usbCallbacks(streamEvent);\n                }\n            }\n        },\n\n\n        hid: {\n            /** List of functions called when receiving data from hid connection. */\n            hidCallbacks: [],\n            /** Calls all functions registered to listen for hid events. */\n            callHid: function(streamEvent) {\n                if (Array.isArray(_qz.hid.hidCallbacks)) {\n                    for(var i = 0; i < _qz.hid.hidCallbacks.length; i++) {\n                        _qz.hid.hidCallbacks[i](streamEvent);\n                    }\n                } else {\n                    _qz.hid.hidCallbacks(streamEvent);\n                }\n            }\n        },\n\n\n        security: {\n            /** Function used to resolve promise when acquiring site's public certificate. */\n            certPromise: function(resolve, reject) { reject(); },\n            /** Called to create new promise (using {@link _qz.security.certPromise}) for certificate retrieval. */\n            callCert: function() {\n                return _qz.tools.promise(_qz.security.certPromise);\n            },\n\n            /** Function used to create promise resolver when requiring signed calls. */\n            signaturePromise: function() { return function(resolve) { resolve(); } },\n            /** Called to create new promise (using {@link _qz.security.signaturePromise}) for signed calls. */\n            callSign: function(toSign) {\n                return _qz.tools.promise(_qz.security.signaturePromise(toSign));\n            }\n        },\n\n\n        tools: {\n            /** Create a new promise */\n            promise: function(resolver) {\n                return new RSVP.Promise(resolver);\n            },\n\n            stringify: function(object) {\n                //old versions of prototype affect stringify\n                var pjson = Array.prototype.toJSON;\n                delete Array.prototype.toJSON;\n\n                var result = JSON.stringify(object);\n\n                if (pjson) {\n                    Array.prototype.toJSON = pjson;\n                }\n\n                return result;\n            },\n\n            hash: function(data) {\n                return Sha256.hash(data);\n            },\n\n            ws: typeof WebSocket !== 'undefined' ? WebSocket : null,\n\n            absolute: function(loc) {\n                if (typeof window !== 'undefined' && typeof document.createElement === 'function') {\n                    var a = document.createElement(\"a\");\n                    a.href = loc;\n                    return a.href;\n                }\n                return loc;\n            },\n\n            /** Performs deep copy to target from remaining params */\n            extend: function(target) {\n                //special case when reassigning properties as objects in a deep copy\n                if (typeof target !== 'object') {\n                    target = {};\n                }\n\n                for(var i = 1; i < arguments.length; i++) {\n                    var source = arguments[i];\n                    if (!source) { continue; }\n\n                    for(var key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            if (target === source[key]) { continue; }\n\n                            if (source[key] && source[key].constructor && source[key].constructor === Object) {\n                                var clone;\n                                if (Array.isArray(source[key])) {\n                                    clone = target[key] || [];\n                                } else {\n                                    clone = target[key] || {};\n                                }\n\n                                target[key] = _qz.tools.extend(clone, source[key]);\n                            } else if (source[key] !== undefined) {\n                                target[key] = source[key];\n                            }\n                        }\n                    }\n                }\n\n                return target;\n            }\n        }\n    };\n\n\n///// CONFIG CLASS ////\n\n    /** Object to handle configured printer options. */\n    function Config(printer, opts) {\n        /**\n         * Set the printer assigned to this config.\n         * @param {string|Object} newPrinter Name of printer. Use object type to specify printing to file or host.\n         *  @param {string} [newPrinter.name] Name of printer to send printing.\n         *  @param {string} [newPrinter.file] Name of file to send printing.\n         *  @param {string} [newPrinter.host] IP address or host name to send printing.\n         *  @param {string} [newPrinter.port] Port used by &lt;printer.host>.\n         */\n        this.setPrinter = function(newPrinter) {\n            if (typeof newPrinter === 'string') {\n                newPrinter = { name: newPrinter };\n            }\n\n            this.printer = newPrinter;\n        };\n\n        /**\n         *  @returns {Object} The printer currently assigned to this config.\n         */\n        this.getPrinter = function() {\n            return this.printer;\n        };\n\n        /**\n         * Alter any of the printer options currently applied to this config.\n         * @param newOpts {Object} The options to change. See <code>qz.config.setDefaults</code> docs for available values.\n         *\n         * @see qz.config.setDefaults\n         */\n        this.reconfigure = function(newOpts) {\n            _qz.tools.extend(this.config, newOpts);\n        };\n\n        /**\n         * @returns {Object} The currently applied options on this config.\n         */\n        this.getOptions = function() {\n            return this.config;\n        };\n\n        // init calls for new config object\n        this.setPrinter(printer);\n        this.config = opts;\n    }\n\n    /**\n     * Shortcut method for calling <code>qz.print</code> with a particular config.\n     * @param {Array<Object|string>} data Array of data being sent to the printer. See <code>qz.print</code> docs for available values.\n     * @param {boolean} [signature] Pre-signed signature of JSON string containing <code>call</code>, <code>params</code>, and <code>timestamp</code>.\n     * @param {number} [signingTimestamp] Required with <code>signature</code>. Timestamp used with pre-signed content.\n     *\n     * @example\n     * qz.print(myConfig, ...); // OR\n     * myConfig.print(...);\n     *\n     * @see qz.print\n     */\n    Config.prototype.print = function(data, signature, signingTimestamp) {\n        qz.print(this, data, signature, signingTimestamp);\n    };\n\n\n///// PUBLIC METHODS /////\n\n    /** @namespace qz */\n    return {\n\n        /**\n         * Calls related specifically to the web socket connection.\n         * @namespace qz.websocket\n         */\n        websocket: {\n            /**\n             * Check connection status. Active connection is necessary for other calls to run.\n             *\n             * @returns {boolean} If there is an active connection with QZ Tray.\n             *\n             * @see connect\n             *\n             * @memberof  qz.websocket\n             */\n            isActive: function() {\n                return _qz.websocket.connection != null && _qz.websocket.connection.established;\n            },\n\n            /**\n             * Call to setup connection with QZ Tray on user's system.\n             *\n             * @param {Object} [options] Configuration options for the web socket connection.\n             *  @param {string|Array<string>} [options.host=['localhost', 'localhost.qz.io']] Host running the QZ Tray software.\n             *  @param {Object} [options.port] Config options for ports to cycle.\n             *   @param {Array<number>} [options.port.secure=[8181, 8282, 8383, 8484]] Array of secure (WSS) ports to try\n             *   @param {Array<number>} [options.port.insecure=[8182, 8283, 8384, 8485]] Array of insecure (WS) ports to try\n             *  @param {boolean} [options.usingSecure=true] If the web socket should try to use secure ports for connecting.\n             *  @param {number} [options.keepAlive=60] Seconds between keep-alive pings to keep connection open. Set to 0 to disable.\n             *  @param {number} [options.retries=0] Number of times to reconnect before failing.\n             *  @param {number} [options.delay=0] Seconds before firing a connection.  Ignored if <code>options.retries</code> is 0.\n             *\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.websocket\n             */\n            connect: function(options) {\n                return _qz.tools.promise(function(resolve, reject) {\n                    if (qz.websocket.isActive()) {\n                        reject(new Error(\"An open connection with QZ Tray already exists\"));\n                        return;\n                    } else if (_qz.websocket.connection != null) {\n                        reject(new Error(\"The current connection attempt has not returned yet\"));\n                        return;\n                    }\n\n                    if (!_qz.tools.ws) {\n                        reject(new Error(\"WebSocket not supported by this browser\"));\n                        return;\n                    } else if (!_qz.tools.ws.CLOSED || _qz.tools.ws.CLOSED == 2) {\n                        reject(new Error(\"Unsupported WebSocket version detected: HyBi-00/Hixie-76\"));\n                        return;\n                    }\n\n                    //ensure some form of options exists for value checks\n                    if (options == undefined) { options = {}; }\n\n                    //disable secure ports if page is not secure\n                    if (typeof location === 'undefined' || location.protocol !== 'https:') {\n                        //respect forcing secure ports if it is defined, otherwise disable\n                        if (typeof options.usingSecure === 'undefined') {\n                            _qz.log.trace(\"Disabling secure ports due to insecure page\");\n                            options.usingSecure = false;\n                        }\n                    }\n\n                    //ensure any hosts are passed to internals as an array\n                    if (typeof options.host !== 'undefined' && !Array.isArray(options.host)) {\n                        options.host = [options.host];\n                    }\n\n                    var attempt = function(count) {\n                        var tried = false;\n                        var nextAttempt = function() {\n                            if (!tried) {\n                                tried = true;\n\n                                if (options && count < options.retries) {\n                                    attempt(count + 1);\n                                } else {\n                                    reject.apply(null, arguments);\n                                }\n                            }\n                        };\n\n                        var delayed = function() {\n                            var config = _qz.tools.extend({}, _qz.websocket.connectConfig, options);\n                            _qz.websocket.setup.findConnection(config, resolve, nextAttempt)\n                        };\n                        if (count == 0) {\n                            delayed(); // only retries will be called with a delay\n                        } else {\n                            setTimeout(delayed, options.delay * 1000);\n                        }\n                    };\n\n                    attempt(0);\n                });\n            },\n\n            /**\n             * Stop any active connection with QZ Tray.\n             *\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.websocket\n             */\n            disconnect: function() {\n                return _qz.tools.promise(function(resolve, reject) {\n                    if (qz.websocket.isActive()) {\n                        _qz.websocket.connection.close();\n                        _qz.websocket.connection.promise = { resolve: resolve, reject: reject };\n                    } else {\n                        reject(new Error(\"No open connection with QZ Tray\"))\n                    }\n                });\n            },\n\n            /**\n             * List of functions called for any connections errors outside of an API call.<p/>\n             * Also called if {@link websocket#connect} fails to connect.\n             *\n             * @param {Function|Array<Function>} calls Single or array of <code>Function({Event} event)</code> calls.\n             *\n             * @memberof qz.websocket\n             */\n            setErrorCallbacks: function(calls) {\n                _qz.websocket.errorCallbacks = calls;\n            },\n\n            /**\n             * List of functions called for any connection closing event outside of an API call.<p/>\n             * Also called when {@link websocket#disconnect} is called.\n             *\n             * @param {Function|Array<Function>} calls Single or array of <code>Function({Event} event)</code> calls.\n             *\n             * @memberof qz.websocket\n             */\n            setClosedCallbacks: function(calls) {\n                _qz.websocket.closedCallbacks = calls;\n            },\n\n            /**\n             * @param {string} [hostname] Hostname to try to connect to when determining network interfaces, defaults to \"google.com\"\n             * @param {number} [port] Port to use with custom hostname, defaults to 443\n             *\n             * @returns {Promise<Object<{ipAddress: String, macAddress: String}>|Error>} Connected system's network information.\n             *\n             * @memberof qz.websocket\n             */\n            getNetworkInfo: function(hostname, port) {\n                return _qz.websocket.dataPromise('websocket.getNetworkInfo', {\n                    hostname: hostname,\n                    port: port\n                });\n            },\n\n            /**\n             * @returns {Object<{socket: String, host: String, port: Number}>} Details of active websocket connection\n             *\n             * @memberof qz.websocket\n             */\n            getConnectionInfo: function() {\n                if (_qz.websocket.connection) {\n                    var url = _qz.websocket.connection.url.split(/[:\\/]+/g);\n                    return { socket: url[0], host: url[1], port: +url[2] };\n                } else {\n                    throw new Error(\"A connection to QZ has not been established yet\");\n                }\n            }\n\n        },\n\n\n        /**\n         * Calls related to getting printer information from the connection.\n         * @namespace qz.printers\n         */\n        printers: {\n            /**\n             * @returns {Promise<string|Error>} Name of the connected system's default printer.\n             *\n             * @memberof qz.printers\n             */\n            getDefault: function() {\n                return _qz.websocket.dataPromise('printers.getDefault');\n            },\n\n            /**\n             * @param {string} [query] Search for a specific printer. All printers are returned if not provided.\n             *\n             * @returns {Promise<Array<string>|string|Error>} The matched printer name if <code>query</code> is provided.\n             *                                                Otherwise an array of printer names found on the connected system.\n             *\n             * @memberof qz.printers\n             */\n            find: function(query) {\n                return _qz.websocket.dataPromise('printers.find', { query: query });\n            }\n        },\n\n        /**\n         * Calls related to setting up new printer configurations.\n         * @namespace qz.configs\n         */\n        configs: {\n            /**\n             * Default options used by new configs if not overridden.\n             * Setting a value to NULL will use the printer's default options.\n             * Updating these will not update the options on any created config.\n             *\n             * @param {Object} options Default options used by printer configs if not overridden.\n             *\n             *  @param {string} [options.colorType='color'] Valid values <code>[color | grayscale | blackwhite]</code>\n             *  @param {number} [options.copies=1] Number of copies to be printed.\n             *  @param {number|Array<number>} [options.density=72] Pixel density (DPI, DPMM, or DPCM depending on <code>[options.units]</code>).\n             *      If provided as an array, uses the first supported density found (or the first entry if none found).\n             *  @param {boolean} [options.duplex=false] Double sided printing\n             *  @param {number} [options.fallbackDensity=null] Value used when default density value cannot be read, or in cases where reported as \"Normal\" by the driver, (in DPI, DPMM, or DPCM depending on <code>[options.units]</code>).\n             *  @param {string} [options.interpolation='bicubic'] Valid values <code>[bicubic | bilinear | nearest-neighbor]</code>. Controls how images are handled when resized.\n             *  @param {string} [options.jobName=null] Name to display in print queue.\n             *  @param {boolean} [options.legacy=false] If legacy style printing should be used.\n             *  @param {Object|number} [options.margins=0] If just a number is provided, it is used as the margin for all sides.\n             *   @param {number} [options.margins.top=0]\n             *   @param {number} [options.margins.right=0]\n             *   @param {number} [options.margins.bottom=0]\n             *   @param {number} [options.margins.left=0]\n             *  @param {string} [options.orientation=null] Valid values <code>[portrait | landscape | reverse-landscape]</code>\n             *  @param {number} [options.paperThickness=null]\n             *  @param {string} [options.printerTray=null] //TODO - string?\n             *  @param {boolean} [options.rasterize=true] Whether documents should be rasterized before printing. Forced TRUE if <code>[options.density]</code> is specified.\n             *  @param {number} [options.rotation=0] Image rotation in degrees.\n             *  @param {boolean} [options.scaleContent=true] Scales print content to page size, keeping ratio.\n             *  @param {Object} [options.size=null] Paper size.\n             *   @param {number} [options.size.width=null] Page width.\n             *   @param {number} [options.size.height=null] Page height.\n             *  @param {string} [options.units='in'] Page units, applies to paper size, margins, and density. Valid value <code>[in | cm | mm]</code>\n             *\n             *  @param {boolean} [options.altPrinting=false] Print the specified file using CUPS command line arguments.  Has no effect on Windows.\n             *  @param {string} [options.encoding=null] Character set\n             *  @param {string} [options.endOfDoc=null]\n             *  @param {number} [options.perSpool=1] Number of pages per spool.\n             *\n             * @memberof qz.configs\n             */\n            setDefaults: function(options) {\n                _qz.tools.extend(_qz.printing.defaultConfig, options);\n            },\n\n            /**\n             * Creates new printer config to be used in printing.\n             *\n             * @param {string|object} printer Name of printer. Use object type to specify printing to file or host.\n             *  @param {string} [printer.name] Name of printer to send printing.\n             *  @param {string} [printer.file] Name of file to send printing.\n             *  @param {string} [printer.host] IP address or host name to send printing.\n             *  @param {string} [printer.port] Port used by &lt;printer.host>.\n             * @param {Object} [options] Override any of the default options for this config only.\n             *\n             * @returns {Config} The new config.\n             *\n             * @see config.setDefaults\n             *\n             * @memberof qz.configs\n             */\n            create: function(printer, options) {\n                var myOpts = _qz.tools.extend({}, _qz.printing.defaultConfig, options);\n                return new Config(printer, myOpts);\n            }\n        },\n\n\n        /**\n         * Send data to selected config for printing.\n         * The promise for this method will resolve when the document has been sent to the printer. Actual printing may not be complete.\n         * <p/>\n         * Optionally, print requests can be pre-signed:\n         * Signed content consists of a JSON object string containing no spacing,\n         * following the format of the \"call\" and \"params\" keys in the API call, with the addition of a \"timestamp\" key in milliseconds\n         * ex. <code>'{\"call\":\"<callName>\",\"params\":{...},\"timestamp\":1450000000}'</code>\n         *\n         * @param {Object<Config>} config Previously created config object.\n         * @param {Array<Object|string>} data Array of data being sent to the printer. String values are interpreted the same as the default <code>[raw]</code> object value.\n         *  @param {string} data.data\n         *  @param {string} data.type Valid values <code>[html | image | pdf | raw]</code>\n         *  @param {string} [data.format] Format of data provided.<p/>\n         *      For <code>[html]</code> types, valid formats include <code>[file(default) | plain]</code>.<p/>\n         *      For <code>[image]</code> types, valid formats include <code>[base64 | file(default)]</code>.<p/>\n         *      For <code>[pdf]</code> types, valid format include <code>[base64 | file(default)]</code>.<p/>\n         *      For <code>[raw]</code> types, valid formats include <code>[base64 | file | hex | plain(default) | image | xml]</code>.\n         *  @param {Object} [data.options]\n         *   @param {string} [data.options.language] Required with <code>[raw]</code> type <code>[image]</code> format. Printer language.\n         *   @param {number} [data.options.x] Optional with <code>[raw]</code> type <code>[image]</code> format. The X position of the image.\n         *   @param {number} [data.options.y] Optional with <code>[raw]</code> type <code>[image]</code> format. The Y position of the image.\n         *   @param {string|number} [data.options.dotDensity] Optional with <code>[raw]</code> type <code>[image]</code> format.\n         *   @param {number} [data.precision=128] Optional with <code>[raw]</code> type <code>[image]</code> format. Bit precision of the ribbons.\n         *   @param {boolean|string|Array<Array<number>>} [data.options.overlay=false] Optional with <code>[raw]</code> type <code>[image]</code> format.\n         *      Boolean sets entire layer, string sets mask image, Array sets array of rectangles in format <code>[x1,y1,x2,y2]</code>.\n         *   @param {string} [data.options.xmlTag] Required with <code>[xml]</code> format. Tag name containing base64 formatted data.\n         *   @param {number} [data.options.pageWidth] Optional with <code>[html]</code> type printing. Width of the web page to render. Defaults to paper width.\n         *   @param {number} [data.options.pageHeight] Optional with <code>[html]</code> type printing. Height of the web page to render. Defaults to adjusted web page height.\n         * @param {boolean} [signature] Pre-signed signature of JSON string containing <code>call</code>, <code>params</code>, and <code>timestamp</code>.\n         * @param {number} [signingTimestamp] Required with <code>signature</code>. Timestamp used with pre-signed content.\n         *\n         * @returns {Promise<null|Error>}\n         *\n         * @see qz.config.create\n         *\n         * @memberof qz\n         */\n        print: function(config, data, signature, signingTimestamp) {\n            //change relative links to absolute\n            for(var i = 0; i < data.length; i++) {\n                if (data[i].constructor === Object) {\n                    if ((!data[i].format && data[i].type && (data[i].type.toUpperCase() !== 'RAW' && data[i].type.toUpperCase() !== 'DIRECT')) //unspecified format and not raw -> assume file\n                        || (data[i].format && (data[i].format.toUpperCase() === 'FILE'\n                            || (data[i].format.toUpperCase() === 'IMAGE' && !(data[i].data.indexOf(\"data:image/\") === 0 && data[i].data.indexOf(\";base64,\") !== 0))\n                            || data[i].format.toUpperCase() === 'XML'))) {\n                        data[i].data = _qz.tools.absolute(data[i].data);\n                    }\n                    if (data[i].options && typeof data[i].options.overlay === 'string') {\n                        data[i].options.overlay = _qz.tools.absolute(data[i].options.overlay);\n                    }\n                }\n            }\n\n            var params = {\n                printer: config.getPrinter(),\n                options: config.getOptions(),\n                data: data\n            };\n            return _qz.websocket.dataPromise('print', params, signature, signingTimestamp);\n        },\n\n\n        /**\n         * Calls related to interaction with serial ports.\n         * @namespace qz.serial\n         */\n        serial: {\n            /**\n             * @returns {Promise<Array<string>|Error>} Communication (RS232, COM, TTY) ports available on connected system.\n             *\n             * @memberof qz.serial\n             */\n            findPorts: function() {\n                return _qz.websocket.dataPromise('serial.findPorts');\n            },\n\n            /**\n             * List of functions called for any response from open serial ports.\n             * Event data will contain <code>{string} portName</code> for all types.\n             *  For RECEIVE types, <code>{string} output</code>.\n             *  For ERROR types, <code>{string} exception</code>.\n             *\n             * @param {Function|Array<Function>} calls Single or array of <code>Function({string} portName, {string} output)</code> calls.\n             *\n             * @memberof qz.serial\n             */\n            setSerialCallbacks: function(calls) {\n                _qz.serial.serialCallbacks = calls;\n            },\n\n            /**\n             * @param {string} port Name of port to open.\n             * @param {Object} [options] Boundaries of serial port output.\n             *  @param {string} [options.start=0x0002] Character denoting start of serial response. Not used if <code>width</code is provided.\n             *  @param {string} [options.end=0x000D] Character denoting end of serial response. Not used if <code>width</code> is provided.\n             *  @param {number} [options.width] Used for fixed-width response serial communication.\n             *  @param {string} [options.baudRate=9600]\n             *  @param {string} [options.dataBits=8]\n             *  @param {string} [options.stopBits=1]\n             *  @param {string} [options.parity='NONE'] Valid values <code>[NONE| EVEN | ODD | MARK | SPACE]</code>\n             *  @param {string} [options.flowControl='NONE'] Valid values <code>[NONE | XONXOFF | XONXOFF_OUT | XONXOFF_IN | RTSCTS | RTSCTS_OUT | RTSCTS_IN]</code>\n             *\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.serial\n             */\n            openPort: function(port, options) {\n                var params = {\n                    port: port,\n                    options: options\n                };\n                return _qz.websocket.dataPromise('serial.openPort', params);\n            },\n\n            /**\n             * Send commands over a serial port.\n             * Any responses from the device will be sent to serial callback functions.\n             *\n             * @param {string} port An open port to send data over.\n             * @param {string} data The data to send to the serial device.\n             * @param {Object} [properties] DEPRECATED: Properties of data being sent over the serial port.\n             *  @param {string} [properties.baudRate=9600]\n             *  @param {string} [properties.dataBits=8]\n             *  @param {string} [properties.stopBits=1]\n             *  @param {string} [properties.parity='NONE'] Valid values <code>[NONE| EVEN | ODD | MARK | SPACE]</code>\n             *  @param {string} [properties.flowControl='NONE'] Valid values <code>[NONE | XONXOFF | XONXOFF_OUT | XONXOFF_IN | RTSCTS | RTSCTS_OUT | RTSCTS_IN]</code>\n             *\n             * @returns {Promise<null|Error>}\n             *\n             * @see qz.serial.setSerialCallbacks\n             *\n             * @memberof qz.serial\n             */\n            sendData: function(port, data, properties) {\n                if (properties != null) {\n                    _qz.log.warn(\"Properties object is deprecated on sendData calls, use openPort instead.\");\n                }\n\n                var params = {\n                    port: port,\n                    data: data,\n                    properties: properties\n                };\n                return _qz.websocket.dataPromise('serial.sendData', params);\n            },\n\n            /**\n             * @param {string} port Name of port to close.\n             *\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.serial\n             */\n            closePort: function(port) {\n                return _qz.websocket.dataPromise('serial.closePort', { port: port });\n            }\n        },\n\n\n        /**\n         * Calls related to interaction with USB devices.\n         * @namespace qz.usb\n         */\n        usb: {\n            /**\n             * List of available USB devices. Includes (hexadecimal) vendor ID, (hexadecimal) product ID, and hub status.\n             * If supported, also returns manufacturer and product descriptions.\n             *\n             * @param includeHubs Whether to include USB hubs.\n             * @returns {Promise<Array<Object>|Error>} Array of JSON objects containing information on connected USB devices.\n             *\n             * @memberof qz.usb\n             */\n            listDevices: function(includeHubs) {\n                return _qz.websocket.dataPromise('usb.listDevices', { includeHubs: includeHubs });\n            },\n\n            /**\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             * @returns {Promise<Array<string>|Error>} List of available (hexadecimal) interfaces on a USB device.\n             *\n             * @memberof qz.usb\n             */\n            listInterfaces: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('usb.listInterfaces', deviceInfo);\n            },\n\n            /**\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.iface Hex string of interface on the USB device to search.\n             * @returns {Promise<Array<string>|Error>} List of available (hexadecimal) endpoints on a USB device's interface.\n             *\n             * @memberof qz.usb\n             */\n            listEndpoints: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        interface: arguments[2]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.listEndpoints', deviceInfo);\n            },\n\n            /**\n             * List of functions called for any response from open usb devices.\n             * Event data will contain <code>{string} vendorId</code> and <code>{string} productId</code> for all types.\n             *  For RECEIVE types, <code>{Array} output</code> (in hexadecimal format).\n             *  For ERROR types, <code>{string} exception</code>.\n             *\n             * @param {Function|Array<Function>} calls Single or array of <code>Function({Object} eventData)</code> calls.\n             *\n             * @memberof qz.usb\n             */\n            setUsbCallbacks: function(calls) {\n                _qz.usb.usbCallbacks = calls;\n            },\n\n            /**\n             * Claim a USB device's interface to enable sending/reading data across an endpoint.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.interface Hex string of interface on the USB device to claim.\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.usb\n             */\n            claimDevice: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        interface: arguments[2]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.claimDevice', deviceInfo);\n            },\n\n            /**\n             * Check the current claim state of a USB device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             * @returns {Promise<boolean|Error>}\n             *\n             * @since 2.0.2\n             * @memberOf qz.usb\n             */\n            isClaimed: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('usb.isClaimed', deviceInfo);\n            },\n\n            /**\n             * Send data to a claimed USB device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.endpoint Hex string of endpoint on the claimed interface for the USB device.\n             *  @param deviceInfo.data Bytes to send over specified endpoint.\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.usb\n             */\n            sendData: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        endpoint: arguments[2],\n                        data: arguments[3]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.sendData', deviceInfo);\n            },\n\n            /**\n             * Read data from a claimed USB device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.endpoint Hex string of endpoint on the claimed interface for the USB device.\n             *  @param deviceInfo.responseSize Size of the byte array to receive a response in.\n             * @returns {Promise<Array<string>|Error>} List of (hexadecimal) bytes received from the USB device.\n             *\n             * @memberof qz.usb\n             */\n            readData: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        endpoint: arguments[2],\n                        responseSize: arguments[3]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.readData', deviceInfo);\n            },\n\n            /**\n             * Provides a continuous stream of read data from a claimed USB device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.endpoint Hex string of endpoint on the claimed interface for the USB device.\n             *  @param deviceInfo.responseSize Size of the byte array to receive a response in.\n             *  @param deviceInfo.interval=100 Frequency to send read data back, in milliseconds.\n             * @returns {Promise<null|Error>}\n             *\n             * @see qz.usb.setUsbCallbacks\n             *\n             * @memberof qz.usb\n             */\n            openStream: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        endpoint: arguments[2],\n                        responseSize: arguments[3],\n                        interval: arguments[4]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.openStream', deviceInfo);\n            },\n\n            /**\n             * Stops the stream of read data from a claimed USB device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             *  @param deviceInfo.endpoint Hex string of endpoint on the claimed interface for the USB device.\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.usb\n             */\n            closeStream: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        endpoint: arguments[2]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('usb.closeStream', deviceInfo);\n            },\n\n            /**\n             * Release a claimed USB device to free resources after sending/reading data.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of USB device's vendor ID.\n             *  @param deviceInfo.productId Hex string of USB device's product ID.\n             * @returns {Promise<null|Error>}\n             *\n             * @memberof qz.usb\n             */\n            releaseDevice: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('usb.releaseDevice', deviceInfo);\n            }\n        },\n\n\n        /**\n         * Calls related to interaction with HID USB devices<br/>\n         * Many of these calls can be accomplished from the <code>qz.usb</code> namespace,\n         * but HID allows for simpler interaction\n         * @namespace qz.hid\n         * @since 2.0.1\n         */\n        hid: {\n            /**\n             * List of available HID devices. Includes (hexadecimal) vendor ID and (hexadecimal) product ID.\n             * If available, also returns manufacturer and product descriptions.\n             *\n             * @returns {Promise<Array<Object>|Error>} Array of JSON objects containing information on connected HID devices.\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            listDevices: function() {\n                return _qz.websocket.dataPromise('hid.listDevices');\n            },\n\n            /**\n             * Start listening for HID device actions, such as attach / detach events.\n             * Reported under the ACTION type in the streamEvent on callbacks.\n             *\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @see qz.hid.setHidCallbacks\n             *\n             * @memberof qz.hid\n             */\n            startListening: function() {\n                return _qz.websocket.dataPromise('hid.startListening');\n            },\n\n            /**\n             * Stop listening for HID device actions.\n             *\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @see qz.hid.setHidCallbacks\n             *\n             * @memberof qz.hid\n             */\n            stopListening: function() {\n                return _qz.websocket.dataPromise('hid.stopListening');\n            },\n\n            /**\n             * List of functions called for any response from open usb devices.\n             * Event data will contain <code>{string} vendorId</code> and <code>{string} productId</code> for all types.\n             *  For RECEIVE types, <code>{Array} output</code> (in hexadecimal format).\n             *  For ERROR types, <code>{string} exception</code>.\n             *  For ACTION types, <code>{string} actionType</code>.\n             *\n             * @param {Function|Array<Function>} calls Single or array of <code>Function({Object} eventData)</code> calls.\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            setHidCallbacks: function(calls) {\n                _qz.hid.hidCallbacks = calls;\n            },\n\n            /**\n             * Claim a HID device to enable sending/reading data across.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            claimDevice: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('hid.claimDevice', deviceInfo);\n            },\n\n            /**\n             * Check the current claim state of a HID device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             * @returns {Promise<boolean|Error>}\n             *\n             * @since 2.0.2\n             * @memberOf qz.hid\n             */\n            isClaimed: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('hid.isClaimed', deviceInfo);\n            },\n\n            /**\n             * Send data to a claimed HID device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             *  @param deviceInfo.data Bytes to send over specified endpoint.\n             *  @param deviceInfo.endpoint=0x00 First byte of the data packet signifying the HID report ID.\n             *                             Must be 0x00 for devices only supporting a single report.\n             *  @param deviceInfo.reportId=0x00 Alias for <code>deviceInfo.endpoint</code>. Not used if endpoint is provided.\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            sendData: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        data: arguments[2],\n                        endpoint: arguments[3]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('hid.sendData', deviceInfo);\n            },\n\n            /**\n             * Read data from a claimed HID device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             *  @param deviceInfo.responseSize Size of the byte array to receive a response in.\n             * @returns {Promise<Array<string>|Error>} List of (hexadecimal) bytes received from the HID device.\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            readData: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        responseSize: arguments[2]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('hid.readData', deviceInfo);\n            },\n\n            /**\n             * Provides a continuous stream of read data from a claimed HID device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             *  @param deviceInfo.responseSize Size of the byte array to receive a response in.\n             *  @param deviceInfo.interval=100 Frequency to send read data back, in milliseconds.\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @see qz.hid.setHidCallbacks\n             *\n             * @memberof qz.hid\n             */\n            openStream: function(deviceInfo) {\n                //backwards compatibility\n                if (typeof deviceInfo !== 'object') {\n                    deviceInfo = {\n                        vendorId: arguments[0],\n                        productId: arguments[1],\n                        responseSize: arguments[2],\n                        interval: arguments[3]\n                    };\n                }\n\n                return _qz.websocket.dataPromise('hid.openStream', deviceInfo);\n            },\n\n            /**\n             * Stops the stream of read data from a claimed HID device.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            closeStream: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('hid.closeStream', deviceInfo);\n            },\n\n            /**\n             * Release a claimed HID device to free resources after sending/reading data.\n             *\n             * @param {object} deviceInfo Config details of the HID device.\n             *  @param deviceInfo.vendorId Hex string of HID device's vendor ID.\n             *  @param deviceInfo.productId Hex string of HID device's product ID.\n             *  @param deviceInfo.usagePage Hex string of HID device's usage page when multiple are present.\n             *  @param deviceInfo.serial Serial ID of HID device.\n             * @returns {Promise<null|Error>}\n             * @since 2.0.1\n             *\n             * @memberof qz.hid\n             */\n            releaseDevice: function(deviceInfo) {\n                if (typeof deviceInfo !== 'object') { deviceInfo = { vendorId: arguments[0], productId: arguments[1] }; } //backwards compatibility\n\n                return _qz.websocket.dataPromise('hid.releaseDevice', deviceInfo);\n            }\n        },\n\n\n        /**\n         * Calls related to signing connection requests.\n         * @namespace qz.security\n         */\n        security: {\n            /**\n             * Set promise resolver for calls to acquire the site's certificate.\n             *\n             * @param {Function} promiseCall <code>Function({function} resolve)</code> called as promise for getting the public certificate.\n             *     Should call <code>resolve</code> parameter with the result.\n             *\n             * @memberof qz.security\n             */\n            setCertificatePromise: function(promiseCall) {\n                _qz.security.certPromise = promiseCall;\n            },\n\n            /**\n             * Set promise creator for calls to sign API calls.\n             *\n             * @param {Function} promiseGen <code>Function({function} toSign)</code> Should return a function, <code>Function({function} resolve)</code>, that\n             *     will sign the content and resolve the created promise.\n             * @memberof qz.security\n             */\n            setSignaturePromise: function(promiseGen) {\n                _qz.security.signaturePromise = promiseGen;\n            }\n        },\n\n        /**\n         * Calls related to compatibility adjustments\n         * @namespace qz.api\n         */\n        api: {\n            /**\n             * Show or hide QZ api debugging statements in the browser console.\n             *\n             * @param {boolean} show Whether the debugging logs for QZ should be shown. Hidden by default.\n             *\n             * @memberof qz.api\n             */\n            showDebug: function(show) {\n                _qz.DEBUG = show;\n            },\n\n            /**\n             * Get version of connected QZ Tray application.\n             *\n             * @returns {Promise<string|Error>} Version number of QZ Tray.\n             *\n             * @memberof qz.api\n             */\n            getVersion: function() {\n                return _qz.websocket.dataPromise('getVersion');\n            },\n\n            /**\n             * Change the promise library used by QZ API.\n             * Should be called before any initialization to avoid possible errors.\n             *\n             * @param {Function} promiser <code>Function({function} resolver)</code> called to create new promises.\n             *\n             * @memberof qz.api\n             */\n            setPromiseType: function(promiser) {\n                _qz.tools.promise = promiser;\n            },\n\n            /**\n             * Change the SHA-256 hashing function used by QZ API.\n             * Should be called before any initialization to avoid possible errors.\n             *\n             * @param {Function} hasher <code>Function({function} message)</code> called to create hash of passed string.\n             *\n             * @memberof qz.api\n             */\n            setSha256Type: function(hasher) {\n                _qz.tools.hash = hasher;\n            },\n\n            /**\n             * Change the WebSocket handler.\n             * Should be called before any initialization to avoid possible errors.\n             *\n             * @param {Function} ws <code>Function({function} WebSocket)</code> called to override the internal WebSocket handler.\n             *\n             * @memberof qz.api\n             */\n            setWebSocketType: function(ws) {\n                _qz.tools.ws = ws;\n            }\n        },\n\n        /**\n         * Version of this JavaScript library\n         *\n         * @constant {string}\n         *\n         * @memberof qz\n         */\n        version: _qz.VERSION\n    };\n\n})();\n\n\n(function() {\n    if (typeof define === 'function' && define.amd) {\n        define(qz);\n    } else if (typeof exports === 'object') {\n        module.exports = qz;\n        try {\n            var crypto = require('crypto');\n            qz.api.setSha256Type(function(data) {\n                return crypto.createHash('sha256').update(data).digest('hex');\n            });\n        }\n        catch(ignore) {}\n    } else {\n        window.qz = qz;\n    }\n})();\n"],"sourceRoot":""}